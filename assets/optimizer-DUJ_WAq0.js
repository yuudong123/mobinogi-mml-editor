const c=new Worker(new URL(""+new URL("mmlOptimizerWorker-CVrquCAF.js",import.meta.url).href,import.meta.url),{type:"module"});c.onmessage=e=>{try{const{trackId:o,optimizedMML:t,originalBody:a}=e.data,n=window.mobileApp,s=n?.getProject?.();if(!s)return;const i=s.tracks.find(p=>p.id===o);if(!i)return;const m=Array.isArray(i.notes)&&i.notes.length>0;t&&t.length>0?i.optimizedMML=t:(!m||e.data.notesLen===0)&&(i.optimizedMML=""),i.originalBody=a??"",e.data.safeMode&&window?.console&&!window.__MML_SAFE_MODE_NOTIFIED&&(window.__MML_SAFE_MODE_NOTIFIED=!0);const r=n?.getUIControls?.();r&&typeof r.refreshTracksPanel=="function"&&r.refreshTracksPanel()}catch{}};function d(e,o){try{c.postMessage({trackId:o.id,notes:o.notes?.map(t=>({id:t.id,startTick:t.startTick,durationTick:t.durationTick,pitch:t.pitch,volume:t.volume}))||[],tpqn:e.tpqn,tempoAnchors:e.tempoAnchors?.map(t=>({tempo:t.bpm??t.tempo,tickOffset:t.tick??t.tickOffset}))||[]})}catch{}}function f(e){if(e)for(const o of e.tracks)d(e,o)}export{f as scheduleOptimizeAll,d as scheduleOptimizeTrack};
