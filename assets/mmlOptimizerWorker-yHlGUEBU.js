(function(){"use strict";let w=480;const x="4",m=4,v=15,y=[{base:"c",acc:0},{base:"c",acc:1},{base:"d",acc:0},{base:"d",acc:1},{base:"e",acc:0},{base:"f",acc:0},{base:"f",acc:1},{base:"g",acc:0},{base:"g",acc:1},{base:"a",acc:0},{base:"a",acc:1},{base:"b",acc:0}];let L=!1;function k(c){L=c,w=c?147840:480}class d{static noteString="abcdefgABCDEFGnNrR";static tokenString=d.noteString+"tToOlLvV<>&,;";src;length;arr;start=0;end=0;constructor(t){this.src=t||"",this.length=this.src.length,this.arr=this.src.split("")}static isToken(t){return d.tokenString.indexOf(t)>=0}static isNote(t){return d.noteString.indexOf(t)>=0}static noteName(t){let e=t.substring(0,1);if(e.toLowerCase()==="n"){let s=1;for(;s<t.length;){const i=t.charCodeAt(s);if(i<48||i>57)break;s++}e=t.substring(0,s)}else if(t.length>1){const s=t.charAt(1);(s==="+"||s==="-"||s==="#")&&(e+=s)}return e}static noteNames(t){const e=d.noteName(t),n=t.substring(e.length);return[e,n]}[Symbol.iterator](){return{next:()=>this.end>=this.length?{done:!0,value:void 0}:(this.start=this.end,this.end=this.searchToken(this.end+1),{done:!1,value:this.src.substring(this.start,this.end)})}}getIndex(){return[this.start,this.end]}searchToken(t){let e=t;for(;e<this.length;e++){const n=this.arr[e];if(d.isToken(n))break}return e}}class z{section="4";octave=m;octD=0;tokenStack=0;map;constructor(){this.map=this.createOptimizerMap(),this.map.clear(),this.map.set("4",new f)}createOptimizerMap(){const t=new Map;return t.updateMapMinLength=(e,n)=>{const s=t.get(e);(!s||n.length()<s.length())&&t.set(e,n)},t}getMinString(){let t,e=Number.MAX_SAFE_INTEGER,n=Number.MAX_SAFE_INTEGER;for(const s of this.map.values()){const i=s.length();if(i>e)continue;const o=(s.toString().match(/n\d+/g)||[]).length;(i<e||i===e&&o<n)&&(t=s,e=i,n=o)}return t?t.toString():""}addString(t){for(const e of this.map.values())e.append(t)}addStringAtBack(t,e){for(const n of this.map.values())n.insert(n.length()-e,t)}newBuilder(t,e,n,s){return t.insert(t.length()-s,"l"+e),t.append(n),t}extendPatternBuilder(t,e,n,s,i){}updateBuilder(t,e,n,s,i,r,o){let h=i;if(e.append(s),t!==h){h===t+"."?e.append("."):e.append(h);const a=new f(n);if(this.newBuilder(a,h,s,r),o.set(h,a),h.endsWith(".")){const l=h.slice(0,-1),u=new f(n);this.newBuilder(u,l,s+".",r),o.set(l,u)}this.extendPatternBuilder(o,n,s,h,r)}}addNoteText(t,e,n){const s=new Map,i=this.getMinString();this.map.forEach((r,o)=>this.updateBuilder(o,r,i,t,e,n,s)),s.forEach?.((r,o)=>this.map.updateMapMinLength(o,r)),N.updateFlexDot(this.map,t,e)}fixPattern(t){}resetOctave(){this.octave=m,this.octD=0}doPattern(t,e,n){this.insertOxPattern(n),this.insertLxPattern(t,e,n)}insertLxPattern(t,e,n){let s=e;s===""?s=this.section:s==="."&&(s=this.section+"."),this.addNoteText(t,s,n),this.fixPattern(this.map)}insertOxPattern(t){if(this.octD!==0){const e=this.octave+this.octD;this.addStringAtBack(S(this.octave,e),t),this.octave=e,this.octD=0}}doToken(t,e){if(t==="o")this.octD=parseInt(e||"0",10)-this.octave;else if(t===">")this.octD++;else if(t==="<")this.octD--;else if(t==="l")this.section=e||this.section;else return!1;return!0}nextToken(t){const e=t.charAt(0).toLowerCase(),[n,s]=d.noteNames(t);d.isNote(e)?(this.doPattern(n,s,this.tokenStack),this.tokenStack=0,this.cleanMap()):(this.doToken(e,s)||this.addString(t),e==="&"&&(this.tokenStack+=t.length))}printMap(){}cleanMap(){const t=this.getMinString().length,e=[];this.map.forEach((n,s)=>{n.length()>t+s.length+1&&e.push(s)}),e.forEach(n=>this.map.delete(n))}}class N{static flexList=[64,32,16,8,4].map(t=>new N(t));lCur;lNext;lPrev;constructor(t){this.lCur=t/2+".",this.lNext=""+t,this.lPrev=""+t/4}updatePattern(t,e){let n=e;/^r$/i.test(e)||(n="&"+e);const s=new Map,i=e+this.lPrev+n+this.lCur;for(const r of t.keys())if(r===this.lNext){const o=t.get(r).toString();if(o.endsWith(i)){const h=o.substring(0,o.length-i.length),a=this.lPrev+".",l=h+e+n+a,u=h+e+"l"+a+n,M=h+e+"l"+this.lPrev+n+".";s.set(r,new f(l)),s.set(a,new f(u)),s.set(this.lPrev,new f(M))}}s.forEach((r,o)=>t.updateMapMinLength(o,r))}static updateFlexDot(t,e,n){for(const s of N.flexList)if(n===s.lCur){s.updatePattern(t,e);break}}}class T extends z{disableNopt;constructor(t){super(),this.disableNopt=t}static pattern=[{lStr:"32",match:"r16.",replace:"rrr"},{lStr:"64",match:"r32.",replace:"rrr"}];fixPattern(t){t.forEach((e,n)=>{for(const s of T.pattern)if(n===s.lStr||s.lStr==="*"){const i=e.toString();if(i.endsWith(s.match)){const r=i.length-s.match.length;e.replace(r,i.length,s.replace)}}})}extendPatternBuilder(t,e,n,s,i){const r=e.lastIndexOf("l");let o="4";if(r>=0&&(o=(new d(e.substring(r))[Symbol.iterator]().next().value||"").substring(1)||"4"),i>0&&!o.endsWith(".")&&e.endsWith(n+"&")&&s===String(parseInt(o,10)<<1)+"."){const a=String(parseInt(o,10)<<2),l=new f(e);l.insert(e.length-1,".");const u=new f(l.toString());this.newBuilder(u,a,n,i),t.set(a,u)}}createOptimizerMap(){const t=super.createOptimizerMap(),e=new Map,n=(s,i)=>{const r=t.get(s);if(!r){t.set(s,i);return}const o=V(i,r),h=U(i.toString().substring(0,o)),a=i.toString().substring(0,o),l=A(a,i.toString().substring(o),h,this.disableNopt,e),u=A(a,r.toString().substring(o),h,this.disableNopt,e);l<u&&t.set(s,i)};return t.updateMapMinLength=n,t}}class F{octave=m;parser=new G("");builderList=[];constructor(){this.builderList.push(new b(this.octave))}getCurrentNoteNumber(){return this.parser.getNoteNumber()}notePattern(t,e,n){const s=this.listClone();this.addNoteToken(t),this.cleanList(),n.length===0&&this.addPattern(s)}addPattern(t){const e=this.getCurrentNoteNumber();e<0||e>96||(t.forEach(n=>{n.builder.append("n").append(String(e)),n.nCount++}),this.builderList.push(this.minStack(t)),this.clearOctToken())}addOctToken(t){this.builderList.forEach(e=>e.addOctToken(e.builder.length(),t))}clearOctToken(){this.builderList.forEach(t=>t.offset=void 0)}listClone(){return this.builderList.map(t=>t.clone())}cleanList(){const t=this.minStack(this.builderList);this.builderList=[t]}minStack(t){return t.slice().sort(b.comparator)[0]}doToken(t){const[e,n]=d.noteNames(t),s=e.charAt(0).toLowerCase();s>="a"&&s<="g"?this.notePattern(t,e,n):s===">"?(this.octave++,this.addOctToken(t)):s==="<"?(this.octave--,this.addOctToken(t)):s==="o"?(this.octave=parseInt(n||"0",10),this.addOctToken(t)):this.addToken(t)}addNoteToken(t){this.builderList.forEach(e=>{e.builder.append(S(e.prevOct,this.octave)),e.builder.append(t),e.prevOct=this.octave}),this.clearOctToken()}addToken(t){this.builderList.forEach(e=>e.builder.append(t))}nextToken(t){try{this.parser.noteGT(t)}catch{}this.doToken(t)}getMinString(){return this.minStack(this.builderList).builder.toString()}}class O extends F{map=new Map;disableNopt;constructor(t,e,n){super(),typeof t=="boolean"?this.disableNopt=t:(this.octave=t,this.disableNopt=!!n,this.builderList=[],this.builderList.push(new b(this.octave,e||"")),this.parser.setOctave(this.octave))}addTokenVariant(t,e,n){const s=new f(t.builder.toString());t.prevOct!==e&&s.append(S(t.prevOct,e)),s.append(n);const i=this.map.get(e);(i==null||i.length>s.length())&&this.map.set(e,s.toString())}notePattern(t,e,n){this.builderList.forEach(s=>{if(this.addTokenVariant(s,this.octave,t),e==="b"?this.addTokenVariant(s,this.octave+1,"c-"+n):e==="c"&&this.addTokenVariant(s,this.octave-1,"b+"+n),!this.disableNopt&&s.prevOct!==this.octave&&n.length===0){const i=this.getCurrentNoteNumber();i>=0&&i<=96&&this.addTokenVariant(s,s.prevOct,"n"+i)}}),this.builderList=[],this.map.forEach((s,i)=>this.builderList.push(new b(i,s))),this.map.clear()}}class f{_s;constructor(t=""){this._s=[t]}append(t){return this._s.push(t),this}insert(t,e){const n=this.toString(),s=Math.max(0,Math.min(t,n.length)),i=n.slice(0,s)+e+n.slice(s);return this._s=[i],this}replace(t,e,n){const s=this.toString(),i=s.slice(0,t)+n+s.slice(e);return this._s=[i],this}toString(){return this._s.join("")}length(){return this.toString().length}}class b{static comparator=(t,e)=>t.builder.length()-e.builder.length()||t.nCount-e.nCount;builder=new f;nCount=0;prevOct;offset;constructor(t,e){this.prevOct=t,e&&(this.builder=new f(e),this.nCount=(e.match(/n\d+/g)||[]).length)}addOctToken(t,e){this.offset===void 0&&(this.offset=t)}clone(){const t=new b(this.prevOct);return t.builder=new f(this.builder.toString()),t.offset=this.offset,t.nCount=this.nCount,t}}class G{mml_L=x;mml_oct=m;noteNumber=Number.MIN_SAFE_INTEGER;constructor(t){}setOctave(t){this.mml_oct=t}getNoteNumber(){return this.noteNumber}noteGT(t){if(!t)return 0;const e=t.charAt(0);if(!d.isNote(e)){const r=e.toLowerCase();return r==="l"?this.mml_L=t.substring(1)||this.mml_L:r==="o"?this.mml_oct=Math.max(1,Math.min(7,parseInt(t.substring(1)||String(this.mml_oct),10))):r==="<"?this.mml_oct=Math.max(1,this.mml_oct-1):r===">"&&(this.mml_oct=Math.min(7,this.mml_oct+1)),0}if(e==="n"||e==="N"){let r=1;for(;r<t.length;){const h=t.charCodeAt(r);if(h<48||h>57)break;r++}const o=parseInt(t.substring(1,r),10);if(!Number.isFinite(o))throw new Error("Illegal n token");return this.noteNumber=o,0}let n=t.charAt(0).toLowerCase(),s=0;switch(n){case"c":s=0;break;case"d":s=2;break;case"e":s=4;break;case"f":s=5;break;case"g":s=7;break;case"a":s=9;break;case"b":s=11;break;case"r":return this.noteNumber=Number.MIN_SAFE_INTEGER,0;default:return this.noteNumber=Number.MIN_SAFE_INTEGER,0}const i=t.charAt(1);return i==="+"?s++:i==="-"&&s--,this.noteNumber=this.mml_oct*12+s,0}}class _{originalMML;disableNopt=!1;constructor(t){this.originalMML=t}setDisableNopt(t){return this.disableNopt=t,this}optimizeGen2(){const t=[new T(this.disableNopt),new O(this.disableNopt)];let e=this.originalMML;for(const n of t){for(const s of new d(e))n.nextToken(s);e=n.getMinString()}return e}}function S(c,t){const e=c-t;if(Math.abs(e)>2)return"o"+t;{let n="<<";return e<0&&(n=">>"),n.substring(0,Math.abs(e))}}function V(c,t){const e=c.toString(),n=t.toString();let s=0;const i=Math.min(e.length,n.length);for(;s<i&&e.charCodeAt(s)===n.charCodeAt(s);)s++;for(s=s-1,s<0&&(s=0);s>0;){const r=e.charAt(s);if(d.isToken(r)||d.isNote(r))break;s--}return s}function U(c){const t=c.split("");let e=m;for(let n=0;n<t.length;n++)switch(t[n]){case"<":e=Math.max(1,e-1);break;case">":e=Math.min(7,e+1);break;case"o":case"O":n++,n<t.length&&(e=Math.max(1,Math.min(7,t[n].charCodeAt(0)-48)));break}return e}function A(c,t,e,n,s){const i=`${c.length}:${t}:${e}:${n?"1":"0"}`,r=s.get(i);if(r!=null)return r;const o=new O(e,c,n);for(const a of new d(t))o.nextToken(a);const h=o.getMinString().length;return s.set(i,h),h}function Q(){return 4*w}function D(c){const t=c.endsWith("."),e=t?c.slice(0,-1):c,n=parseInt(e,10);if(!n||n<=0)return 0;let s=Math.floor(Q()/n);return t&&(s+=Math.floor(s/2)),s}function P(c){const n=L?[1,2,4,5,6,7,8,11,12,16,24,32,48,64,128]:[1,2,4,6,8,12,16,24,32,48],s=new Set([5,7,11]),i=new Map;for(const a of n){const l=String(a),u=D(l),M={token:l,t:u,cost:l.length,dotted:!1},p=i.get(u);if((!p||p.cost>M.cost||p.cost===M.cost&&p.dotted)&&i.set(u,M),!s.has(a)){const g=l+".",E=D(g),I={token:g,t:E,cost:g.length,dotted:!0},B=i.get(E);(!B||B.cost>I.cost)&&i.set(E,I)}}const r=Array.from(i.values()).sort((a,l)=>l.t-a.t||a.cost-l.cost||(a.dotted?1:0)-(l.dotted?1:0)),o=[];let h=Math.max(0,c|0);for(;h>0;){let a;for(const l of r)if(l.t<=h){a=l;break}if(a||(a=r[r.length-1]),o.push(a.token),h-=a.t,o.length>2048)break}return o}function X(c){const t=Math.max(12,Math.min(95,c|0)),e=t%12,n=y[e],s=n.base,i=n.acc===0?"":n.acc>0?"+":"-",r=Math.max(1,Math.min(7,Math.floor(t/12)));return{base:s,acc:i,octave:r}}function C(c){const t=[...c||[]].sort((r,o)=>r.startTick-o.startTick||r.pitch-o.pitch);if(t.length===0)return"";let e=0,n=m,s=v,i="o"+n+"l"+x;for(const r of t){const o=Math.max(0,r.startTick-e);o>0&&(P(o).forEach(g=>i+="r"+g),e+=o);const{base:h,acc:a,octave:l}=X(r.pitch);n!==l&&(i+=S(n,l),n=l);const u=r.volume??v;u!==s&&(i+="v"+String(u),s=u),P(Math.max(1,r.durationTick|0)).forEach((p,g)=>{i+=(g>0?"&":"")+h+a+p}),e+=Math.max(1,r.durationTick|0)}return i}function R(c){const t=C(c);return new _(t).setDisableNopt(!1).optimizeGen2()}function W(c,t=!0){try{const e=c||"";return new _(e).setDisableNopt(!t).optimizeGen2()}catch{return c}}self.onmessage=c=>{const{track:t,tpqn:e}=c.data;try{typeof e=="number"&&(e===147840?k(!0):e===480&&k(!1));let n="";t&&Array.isArray(t.notes)&&(n=R(t.notes??[])||C(t.notes??[])||"");const s=n?W(n,!0)||n:"";self.postMessage({trackId:t.id,optimizedMML:s,originalBody:n})}catch{self.postMessage({trackId:t.id,optimizedMML:t.mmlString||"",originalBody:t.mmlString||""})}}})();
